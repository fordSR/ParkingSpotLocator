STEPS FOR GIT
Gatekeeper sets up repository
1. Navigate to folder
2. Git init
3. Git add .
4. Git commit -m ‘description’
5. Github create new repository
6. git remote add origin URL -> from Github repository
7. Git push -u origin master
8. Repeat steps 3/4
8.5. Git push origin master (after making changes)

Create and move to branch
9. Git checkout -b dev1
10. Git branch (shows branches)

Pull from github into folder and make changes and push branch
11. Git clone REPOSITORY ADDRESS (get clone from repository using ssh version)
12. Navigate to folder pulled from GitHub
13. Make new branch -> git checkout -b fix1
14. Git add .
15. Git commit -m ‘description’
16. Git push origin fix1

Gatekeeper deciding to merge two different branches to master
17. Git fetch origin -> gets info about non local branches from GitHub so you know what to pull
18. Git pull origin fix1
19. Be on branch you’re merging into
20. Git checkout master
21. Git merge fix1
22. Git merge dev1 -> get merge conflicts when two branches change the same thing
23. Gives message of files with problems
24. Opening files from the message shows location of problems in file
25. Make changes to deal with conflict and save it
26. Git status -> shows unmerged files
27. Git add .
28. Git status -> make sure merge was okay
29. Git commit -m ‘message about fixing merge conflict’
30. Git log —-online —-graph -—all —-decorate -> shows everything
31. Git push origin master -> gatekeeper pushes up to GitHub



ADDING A .GITIGNORE
1. Navigate to same level as hidden .git folder
2. Touch .gitignore
3. Populate 